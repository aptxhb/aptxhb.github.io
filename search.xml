<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>article title</title>
      <link href="/2022/05/02/article-title/"/>
      <url>/2022/05/02/article-title/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/05/01/hello-world/"/>
      <url>/2022/05/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>typora-vue-theme主题介绍</title>
      <link href="/2018/09/07/%E5%9F%BA%E4%BA%8Econtainerd%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2k8s/"/>
      <url>/2018/09/07/%E5%9F%BA%E4%BA%8Econtainerd%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2k8s/</url>
      
        <content type="html"><![CDATA[<p><strong>基于containerd二进制部署k8s</strong></p><p><strong>声明：</strong></p><p>因部署涉及多台主机期间重复操作过多各组件脚本与配置大致相同固只贴出一份作为参考，参数有异部分大多数为主机名与IP，部署期间注意修改为对应角色信息。操作命令前注意标识符<code>主机名</code>与<code>目录级别</code>，下面是标识符的书写规则。</p><p>例：[root@k8s-master4 ~]#</p><p>第一列：当前用户，隐藏为默认root操作</p><p>第二列：主机名，隐藏则为当前组件的规划主机都要执行，否则只操作当前主机</p><p>第三列：当前目录，注意切换对应目录级别在操作</p><p>示例一：<code>k8s-master4 opt]# pwd</code> 表示只在k8s-master4主机执行操作</p><p>示例二：<code>opt]# pwd</code> 表示安装组件的规划主机内都要执行此操作 如下图：keepalived组件只需在<code>k8s-master4</code>、<code>k8s-node4-1</code>节点上执行</p><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014093216431.png" alt="image-20211014093216431"></p><h5 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h5><table><thead><tr><th>主机名</th><th>IP</th><th>系统</th><th>资源</th><th>k8s-version</th><th>CRI</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>centos 7.8</td><td>2c4G</td><td>v1.17.16</td><td>containerd://1.5.5</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>centos 7.8</td><td>2c4G</td><td>v1.17.16</td><td>containerd://1.5.5</td></tr><tr><td>k8s-node4-2</td><td>192.168.92.157</td><td>centos 7.8</td><td>2c4G</td><td>v1.17.16</td><td>containerd://1.5.5</td></tr></tbody></table><h6 id="系统版本："><a href="#系统版本：" class="headerlink" title="系统版本："></a>系统版本：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># uname -a</span>Linux k8s-master4 <span class="token number">3.10</span>.0-1160.el7.x86_64 <span class="token comment">#1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名:"></a>设置主机名:</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># hostnamectl set-hostname k8s-master4</span><span class="token comment"># hostnamectl set-hostname k8s-node4-1</span><span class="token comment"># hostnamectl set-hostname k8s-node4-2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="设置hosts本机解析："><a href="#设置hosts本机解析：" class="headerlink" title="设置hosts本机解析："></a>设置hosts本机解析：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># cat /etc/hosts</span><span class="token number">127.0</span>.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6<span class="token number">192.168</span>.92.155k8s-master4<span class="token number">192.168</span>.92.156k8s-node4-1<span class="token number">192.168</span>.92.157k8s-node4-2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="关闭防火墙及selinux："><a href="#关闭防火墙及selinux：" class="headerlink" title="关闭防火墙及selinux："></a>关闭防火墙及selinux：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># systemctl stop firewalld</span><span class="token comment"># systemctl disable firewalld</span><span class="token comment"># sed -e 's#SELINUX=enforcing#SELINUX=disabled#g' /etc/selinux/config</span><span class="token comment"># setenforce 0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="关闭swap分区："><a href="#关闭swap分区：" class="headerlink" title="关闭swap分区："></a>关闭swap分区：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># swapoff -a</span><span class="token comment"># grep swap /etc/fstab</span><span class="token comment"># /dev/mapper/centos-swap swap                    swap    defaults        0 0  # 注释swap挂载分区</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="设置时间同步"><a href="#设置时间同步" class="headerlink" title="设置时间同步"></a>设置时间同步</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><span class="token comment"># yum -y install ntpdate</span><span class="token comment"># ntpdate ntp.aliyun.com</span><span class="token comment"># cat &gt; /root/cron_file &lt;&lt; EOF</span>*/2 * * * * ntpdate ntp.aliyun.com <span class="token operator">&amp;&gt;</span> /dev/nullEOF<span class="token comment"># crontab /root/cron_file</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>因为这是本地虚拟机没有安装时间同步服务，所以只用命令简单同步时间。生产环境不要按照此方法。</p><h6 id="开启内核模块"><a href="#开启内核模块" class="headerlink" title="开启内核模块"></a>开启内核模块</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~<span class="token punctuation">]</span><span class="token comment"># cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF</span>net.bridge.bridge-nf-call-ip6tables <span class="token operator">=</span> <span class="token number">1</span>net.bridge.bridge-nf-call-iptables <span class="token operator">=</span> <span class="token number">1</span>net.ipv4.ip_forward <span class="token operator">=</span> <span class="token number">1</span>vm.swappiness <span class="token operator">=</span> <span class="token number">0</span>EOF~<span class="token punctuation">]</span><span class="token comment"># cat &gt; ipvs.sh &lt;&lt; "EOF"</span><span class="token comment">#!/bin/bash</span>/sbin/modprobe br_netfilter/sbin/modprobe -- nf_conntrack_ipv4<span class="token assign-left variable">ipvs_mods_dir</span><span class="token operator">=</span><span class="token string">"/usr/lib/modules/<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -r<span class="token variable">)</span></span>/kernel/net/netfilter/ipvs"</span><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> $ipvs_mods_dir<span class="token operator">|</span><span class="token function">grep</span> -o <span class="token string">"^[^.]*"</span><span class="token variable">)</span></span><span class="token keyword">do</span>  /sbin/modinfo -F filename <span class="token variable">$i</span> <span class="token operator">&amp;&gt;</span>/dev/null  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>    /sbin/modprobe <span class="token variable">$i</span>  <span class="token keyword">fi</span><span class="token keyword">done</span>EOF~<span class="token punctuation">]</span><span class="token comment"># sysctl -p /etc/sysctl.d/k8s.conf</span>~<span class="token punctuation">]</span><span class="token comment"># chmod +x ipvs.sh</span>~<span class="token punctuation">]</span><span class="token comment"># ./ipvs.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="一、自签k8s所需证书"><a href="#一、自签k8s所需证书" class="headerlink" title="一、自签k8s所需证书"></a>一、自签k8s所需证书</h4><p><strong>说明：</strong>证书只在管理节点生成，然后按节点角色拷贝证书秘钥至主机。注意秘钥的权限是<code>600</code>拷贝加上<code>-p</code>参数。</p><ol><li><h6 id="安装cfssl"><a href="#安装cfssl" class="headerlink" title="安装cfssl"></a>安装cfssl</h6></li></ol><p><a href="https://pkg.cfssl.org/R1.2/cfssl_linux-amd64">cfssl 下载地址</a></p><p><a href="https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64">cfssl-json 下载地址</a></p><p><a href="https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64">cfssl-certinfo 下载地址</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 -O /usr/local/sbin/cfssl</span>k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -O /usr/local/sbin/cfssl-json</span>k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -O /usr/local/sbin/cfssl-certinfo</span>k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># chmod +x /usr/local/sbin/cfssl*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211012113552567.png" alt="image-20211012113552567"></p><ol start="2"><li><h6 id="创建CA证书签名请求配置文件ca-csr-json"><a href="#创建CA证书签名请求配置文件ca-csr-json" class="headerlink" title="创建CA证书签名请求配置文件ca-csr.json"></a>创建CA证书签名请求配置文件<code>ca-csr.json</code></h6></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># mkdir /opt/certs/</span>k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># cat &gt; /opt/certs/ca-csr.json &lt;&lt; EOF</span><span class="token punctuation">{</span>    <span class="token string">"CN"</span><span class="token builtin class-name">:</span> <span class="token string">"HuaCloud"</span>,    <span class="token string">"hosts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">]</span>,    <span class="token string">"key"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>        <span class="token string">"algo"</span><span class="token builtin class-name">:</span> <span class="token string">"rsa"</span>,        <span class="token string">"size"</span><span class="token builtin class-name">:</span> <span class="token number">2048</span>    <span class="token punctuation">}</span>,    <span class="token string">"names"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token string">"C"</span><span class="token builtin class-name">:</span> <span class="token string">"CN"</span>,            <span class="token string">"ST"</span><span class="token builtin class-name">:</span> <span class="token string">"shenzhen"</span>,            <span class="token string">"L"</span><span class="token builtin class-name">:</span> <span class="token string">"shenzhen"</span>,            <span class="token string">"O"</span><span class="token builtin class-name">:</span> <span class="token string">"IT"</span>,            <span class="token string">"OU"</span><span class="token builtin class-name">:</span> <span class="token string">"ops"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span>,    <span class="token string">"ca"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>        <span class="token string">"expiry"</span><span class="token builtin class-name">:</span> <span class="token string">"175200h"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>CN：Common Name，浏览器使用该字段验证网站是否合法，一般写的是域名，非常重要。</li><li>C：Country。国家</li><li>ST：State，州，省</li><li>L：Locality，城区，城市</li><li>O：Organization Name，组织名称，公司名称</li><li>OU：Organization Unit Name。组织单位名称，公司部门</li></ul><ol start="3"><li><h6 id="生成CA证书和私钥"><a href="#生成CA证书和私钥" class="headerlink" title="生成CA证书和私钥"></a>生成CA证书和私钥</h6></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 certs<span class="token punctuation">]</span><span class="token comment"># cfssl gencert -initca ca-csr.json | cfssl-json -bare ca</span>k8s-master4 certs<span class="token punctuation">]</span><span class="token comment"># ll</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211012114912559.png" alt="image-20211012114912559"></p><h5 id="签发-etcd-证书"><a href="#签发-etcd-证书" class="headerlink" title="签发 etcd 证书"></a>签发 etcd 证书</h5><ol><li><h6 id="创建基于根证书的配置文件"><a href="#创建基于根证书的配置文件" class="headerlink" title="创建基于根证书的配置文件"></a>创建基于根证书的配置文件</h6></li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json">k8s-master4 certs<span class="token punctuation">]</span># cat &gt; ca-config.json &lt;&lt; EOF<span class="token punctuation">{</span>    <span class="token property">"signing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"default"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"expiry"</span><span class="token operator">:</span> <span class="token string">"175200h"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"profiles"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"server"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"expiry"</span><span class="token operator">:</span> <span class="token string">"175200h"</span><span class="token punctuation">,</span>                <span class="token property">"usages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token string">"signing"</span><span class="token punctuation">,</span>                    <span class="token string">"key encipherment"</span><span class="token punctuation">,</span>                    <span class="token string">"server auth"</span>                <span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"client"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"expiry"</span><span class="token operator">:</span> <span class="token string">"175200h"</span><span class="token punctuation">,</span>                <span class="token property">"usages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token string">"signing"</span><span class="token punctuation">,</span>                    <span class="token string">"key encipherment"</span><span class="token punctuation">,</span>                    <span class="token string">"client auth"</span>                <span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"peer"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"expiry"</span><span class="token operator">:</span> <span class="token string">"175200h"</span><span class="token punctuation">,</span>                <span class="token property">"usages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token string">"signing"</span><span class="token punctuation">,</span>                    <span class="token string">"key encipherment"</span><span class="token punctuation">,</span>                    <span class="token string">"server auth"</span><span class="token punctuation">,</span>                    <span class="token string">"client auth"</span>                <span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>client certificate：客户端使用，用于服务端认证客户端，例如etcdctl、etcd proxy、fleetctl、docker客户端</li><li>server certificate：服务器端使用，客户端已验证服务端身份，例如docker服务端、kube-apiserver</li><li>peer certificate：双向证书，用于etcd集群成员间通信</li></ul><ol start="2"><li><h6 id="创建证书签名请求的配置文件"><a href="#创建证书签名请求的配置文件" class="headerlink" title="创建证书签名请求的配置文件"></a>创建证书签名请求的配置文件</h6></li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json">k8s-master4 certs<span class="token punctuation">]</span># cat &gt; etcd-peer-csr.json &lt;&lt; EOF<span class="token punctuation">{</span>    <span class="token property">"CN"</span><span class="token operator">:</span> <span class="token string">"k8s-etcd"</span><span class="token punctuation">,</span>    <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"192.168.92.155"</span><span class="token punctuation">,</span>        <span class="token string">"192.168.92.156"</span><span class="token punctuation">,</span>        <span class="token string">"192.168.92.157"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"key"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"algo"</span><span class="token operator">:</span> <span class="token string">"rsa"</span><span class="token punctuation">,</span>        <span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">2048</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"names"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"C"</span><span class="token operator">:</span> <span class="token string">"CN"</span><span class="token punctuation">,</span>            <span class="token property">"ST"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>            <span class="token property">"L"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>            <span class="token property">"O"</span><span class="token operator">:</span> <span class="token string">"IT"</span><span class="token punctuation">,</span>            <span class="token property">"OU"</span><span class="token operator">:</span> <span class="token string">"ops"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>hosts</code>：etcd 节点有多少就对应修改</p><ol start="3"><li><h6 id="签发etcd证书和私钥"><a href="#签发etcd证书和私钥" class="headerlink" title="签发etcd证书和私钥"></a>签发etcd证书和私钥</h6></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 certs<span class="token punctuation">]</span><span class="token comment"># cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer etcd-peer-csr.json|cfssl-json -bare etcd-peer</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211012120531731.png" alt="image-20211012120531731"></p><h5 id="签发-client-证书"><a href="#签发-client-证书" class="headerlink" title="签发 client 证书"></a>签发 client 证书</h5><ol><li><h6 id="创建证书签名请求的配置文件-1"><a href="#创建证书签名请求的配置文件-1" class="headerlink" title="创建证书签名请求的配置文件"></a>创建证书签名请求的配置文件</h6></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 certs<span class="token punctuation">]</span><span class="token comment"># cat &gt; client-csr.json &lt;&lt; EOF</span><span class="token punctuation">{</span>    <span class="token string">"CN"</span><span class="token builtin class-name">:</span> <span class="token string">"k8s-node"</span>,    <span class="token string">"hosts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">]</span>,    <span class="token string">"key"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>        <span class="token string">"algo"</span><span class="token builtin class-name">:</span> <span class="token string">"rsa"</span>,        <span class="token string">"size"</span><span class="token builtin class-name">:</span> <span class="token number">2048</span>    <span class="token punctuation">}</span>,    <span class="token string">"names"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token string">"C"</span><span class="token builtin class-name">:</span> <span class="token string">"CN"</span>,            <span class="token string">"ST"</span><span class="token builtin class-name">:</span> <span class="token string">"shenzhen"</span>,            <span class="token string">"L"</span><span class="token builtin class-name">:</span> <span class="token string">"shenzhen"</span>,            <span class="token string">"O"</span><span class="token builtin class-name">:</span> <span class="token string">"IT"</span>,            <span class="token string">"OU"</span><span class="token builtin class-name">:</span> <span class="token string">"ops"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><h6 id="签发client证书和私钥"><a href="#签发client证书和私钥" class="headerlink" title="签发client证书和私钥"></a>签发client证书和私钥</h6></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 certs<span class="token punctuation">]</span><span class="token comment"># cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client client-csr.json |cfssl-json -bare client</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211012122819509.png" alt="image-20211012122819509"></p><h5 id="签发-kube-apiserver-证书"><a href="#签发-kube-apiserver-证书" class="headerlink" title="签发 kube-apiserver 证书"></a>签发 kube-apiserver 证书</h5><ol><li><h6 id="创建证书请求配置文件"><a href="#创建证书请求配置文件" class="headerlink" title="创建证书请求配置文件"></a>创建证书请求配置文件</h6></li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json">k8s-master4 certs<span class="token punctuation">]</span># cat &gt; apiserver-csr.json &lt;&lt; EOF<span class="token punctuation">{</span>    <span class="token property">"CN"</span><span class="token operator">:</span> <span class="token string">"k8s-apiserver"</span><span class="token punctuation">,</span>    <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>        <span class="token string">"10.96.0.1"</span><span class="token punctuation">,</span>        <span class="token string">"kubernetes.default"</span><span class="token punctuation">,</span>        <span class="token string">"kubernetes.default.svc"</span><span class="token punctuation">,</span>        <span class="token string">"kubernetes.default.svc.cluster"</span><span class="token punctuation">,</span>        <span class="token string">"kubernetes.default.svc.cluster.local"</span><span class="token punctuation">,</span>        <span class="token string">"192.168.92.154"</span><span class="token punctuation">,</span> <span class="token comment">// vip</span>        <span class="token string">"192.168.92.155"</span><span class="token punctuation">,</span>        <span class="token string">"192.168.92.156"</span><span class="token punctuation">,</span>        <span class="token string">"192.168.92.157"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"key"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"algo"</span><span class="token operator">:</span> <span class="token string">"rsa"</span><span class="token punctuation">,</span>        <span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">2048</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"names"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"C"</span><span class="token operator">:</span> <span class="token string">"CN"</span><span class="token punctuation">,</span>            <span class="token property">"ST"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>            <span class="token property">"L"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>            <span class="token property">"O"</span><span class="token operator">:</span> <span class="token string">"IT"</span><span class="token punctuation">,</span>            <span class="token property">"OU"</span><span class="token operator">:</span> <span class="token string">"ops"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><h6 id="签发apiserver证书和私钥"><a href="#签发apiserver证书和私钥" class="headerlink" title="签发apiserver证书和私钥"></a>签发apiserver证书和私钥</h6></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 certs<span class="token punctuation">]</span><span class="token comment"># cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server apiserver-csr.json |cfssl-json -bare apiserver</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211012151403019.png" alt="image-20211012151403019"></p><h5 id="签发kubelet证书"><a href="#签发kubelet证书" class="headerlink" title="签发kubelet证书"></a>签发kubelet证书</h5><ol><li><h6 id="创建证书请求配置文件-1"><a href="#创建证书请求配置文件-1" class="headerlink" title="创建证书请求配置文件"></a>创建证书请求配置文件</h6></li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json">k8s-master4 certs<span class="token punctuation">]</span># cat &gt; kubelet-csr.json &lt;&lt; EOF<span class="token punctuation">{</span>    <span class="token property">"CN"</span><span class="token operator">:</span> <span class="token string">"k8s-kubelet"</span><span class="token punctuation">,</span>    <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span>     <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>    <span class="token string">"192.168.92.154"</span><span class="token punctuation">,</span> <span class="token comment">// vip</span>    <span class="token string">"192.168.92.155"</span><span class="token punctuation">,</span>    <span class="token string">"192.168.92.156"</span><span class="token punctuation">,</span>    <span class="token string">"192.168.92.157"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"key"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"algo"</span><span class="token operator">:</span> <span class="token string">"rsa"</span><span class="token punctuation">,</span>        <span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">2048</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"names"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"C"</span><span class="token operator">:</span> <span class="token string">"CN"</span><span class="token punctuation">,</span>            <span class="token property">"ST"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>            <span class="token property">"L"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>            <span class="token property">"O"</span><span class="token operator">:</span> <span class="token string">"IT"</span><span class="token punctuation">,</span>            <span class="token property">"OU"</span><span class="token operator">:</span> <span class="token string">"ops"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><h6 id="签发kubelet证书和私钥"><a href="#签发kubelet证书和私钥" class="headerlink" title="签发kubelet证书和私钥"></a>签发kubelet证书和私钥</h6></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 certs<span class="token punctuation">]</span><span class="token comment"># cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kubelet-csr.json | cfssl-json -bare kubelet</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211012152028883.png" alt="image-20211012152028883"></p><h5 id="签发kube-proxy证书"><a href="#签发kube-proxy证书" class="headerlink" title="签发kube-proxy证书"></a>签发kube-proxy证书</h5><ol><li><h6 id="创建证书请求配置文件-2"><a href="#创建证书请求配置文件-2" class="headerlink" title="创建证书请求配置文件"></a>创建证书请求配置文件</h6></li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json">k8s-master4 certs<span class="token punctuation">]</span># cat &gt; kube-proxy-csr.json &lt;&lt; EOF<span class="token punctuation">{</span>    <span class="token property">"CN"</span><span class="token operator">:</span> <span class="token string">"system:kube-proxy"</span><span class="token punctuation">,</span>    <span class="token property">"key"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"algo"</span><span class="token operator">:</span> <span class="token string">"rsa"</span><span class="token punctuation">,</span>        <span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">2048</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"names"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"C"</span><span class="token operator">:</span> <span class="token string">"CN"</span><span class="token punctuation">,</span>            <span class="token property">"ST"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>            <span class="token property">"L"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>            <span class="token property">"O"</span><span class="token operator">:</span> <span class="token string">"IT"</span><span class="token punctuation">,</span>            <span class="token property">"OU"</span><span class="token operator">:</span> <span class="token string">"ops"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><h6 id="签发kube-proxy证书和私钥"><a href="#签发kube-proxy证书和私钥" class="headerlink" title="签发kube-proxy证书和私钥"></a>签发kube-proxy证书和私钥</h6></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 certs<span class="token punctuation">]</span><span class="token comment"># cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json |cfssl-json -bare kube-proxy-client</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211012152450818.png" alt="image-20211012152450818"></p><p>注意：这里的clent不能与其他的通用，上面CN变了，<code>"CN": "system:kube-proxy"</code></p><h5 id="签发metrics-server证书"><a href="#签发metrics-server证书" class="headerlink" title="签发metrics server证书"></a>签发metrics server证书</h5><ol><li><h6 id="创建metrics-server证书请求配置文件"><a href="#创建metrics-server证书请求配置文件" class="headerlink" title="创建metrics server证书请求配置文件"></a>创建metrics server证书请求配置文件</h6></li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json">k8s-master4 certs<span class="token punctuation">]</span># cat &gt; metrics-server-csr.json &lt;&lt; EOF<span class="token punctuation">{</span>  <span class="token property">"CN"</span><span class="token operator">:</span> <span class="token string">"system:kube-proxy"</span><span class="token punctuation">,</span>  <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"key"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"algo"</span><span class="token operator">:</span> <span class="token string">"rsa"</span><span class="token punctuation">,</span>    <span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">2048</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"names"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"C"</span><span class="token operator">:</span> <span class="token string">"CN"</span><span class="token punctuation">,</span>      <span class="token property">"ST"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>      <span class="token property">"L"</span><span class="token operator">:</span> <span class="token string">"shenzhen"</span><span class="token punctuation">,</span>      <span class="token property">"O"</span><span class="token operator">:</span> <span class="token string">"metrics-proxy"</span><span class="token punctuation">,</span>      <span class="token property">"OU"</span><span class="token operator">:</span> <span class="token string">"IT"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><h6 id="签发metrics-server证书和私钥"><a href="#签发metrics-server证书和私钥" class="headerlink" title="签发metrics server证书和私钥"></a>签发metrics server证书和私钥</h6></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 certs<span class="token punctuation">]</span><span class="token comment"># cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client metrics-server-csr.json  | cfssl-json -bare metrics-proxy</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211012153211111.png" alt="image-20211012153211111"></p><h4 id="二、部署Contianerd"><a href="#二、部署Contianerd" class="headerlink" title="二、部署Contianerd"></a>二、部署Contianerd</h4><h5 id="1-部署containerd"><a href="#1-部署containerd" class="headerlink" title="1. 部署containerd"></a>1. 部署containerd</h5><h6 id="集群规划："><a href="#集群规划：" class="headerlink" title="集群规划："></a>集群规划：</h6><table><thead><tr><th>主机名</th><th>IP</th><th>版本</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>containerd://1.5.5</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>containerd://1.5.5</td></tr><tr><td>k8s-node4-2</td><td>192.168.92.157</td><td>containerd://1.5.5</td></tr></tbody></table><h6 id="下载软件包"><a href="#下载软件包" class="headerlink" title="下载软件包"></a>下载软件包</h6><p><a href="https://github.com/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz">containerd 下载链接</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># mkdir /opt/src &amp;&amp; cd /opt/src</span><span class="token comment"># wget https://github.com/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="解压containerd软件包"><a href="#解压containerd软件包" class="headerlink" title="解压containerd软件包"></a>解压containerd软件包</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># tar -xf cri-containerd-cni-1.5.5-linux-amd64.tar.gz -C /</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># mkdir /etc/containerd</span><span class="token comment"># containerd config default &gt; /etc/containerd/config.toml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="修改配置config-toml"><a href="#修改配置config-toml" class="headerlink" title="修改配置config.toml"></a>修改配置config.toml</h6><pre class="line-numbers language-none"><code class="language-none">...sandbox_image = "docker.io/kubernetes/pause:latest"...# conf_dir = "/etc/cni/net.d"...SystemdCgroup = true...      [plugins."io.containerd.grpc.v1.cri".registry.mirrors]         [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]            endpoint = ["https://uwa9by0v.mirror.aliyuncs.com"]         [plugins."io.containerd.grpc.v1.cri".registry.mirrors."k8s.gcr.io"]            endpoint = ["http://registry.aliyuncs.com/k8sxio"]...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上是需要修改的内容</p><h6 id="启动并设置开机自启"><a href="#启动并设置开机自启" class="headerlink" title="启动并设置开机自启"></a>启动并设置开机自启</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># systemctl enable containerd --now</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="三、部署主控节点组件"><a href="#三、部署主控节点组件" class="headerlink" title="三、部署主控节点组件"></a>三、部署主控节点组件</h4><h5 id="1-安装etcd集群"><a href="#1-安装etcd集群" class="headerlink" title="1. 安装etcd集群"></a>1. 安装etcd集群</h5><h6 id="集群规划：-1"><a href="#集群规划：-1" class="headerlink" title="集群规划："></a>集群规划：</h6><table><thead><tr><th>主机名</th><th>角色</th><th>IP</th></tr></thead><tbody><tr><td>k8s-master4</td><td>etcd leader</td><td>192.168.92.155</td></tr><tr><td>k8s-node4-1</td><td>etcd foolow</td><td>192.168.92.156</td></tr><tr><td>k8s-node4-2</td><td>etcd foolow</td><td>192.168.92.157</td></tr></tbody></table><h6 id="下载软件、解压、做软连接："><a href="#下载软件、解压、做软连接：" class="headerlink" title="下载软件、解压、做软连接："></a>下载软件、解压、做软连接：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~<span class="token punctuation">]</span><span class="token comment"># mkdir /opt/src &amp;&amp; cd /opt/src</span>src<span class="token punctuation">]</span><span class="token comment"># wget https://github.com/etcd-io/etcd/releases/download/v3.1.20/etcd-v3.1.20-linux-amd64.tar.gz</span>src<span class="token punctuation">]</span><span class="token comment"># tar -xf etcd-v3.1.20-linux-amd64.tar.gz -C /opt/</span>src<span class="token punctuation">]</span><span class="token comment"># cd /opt/</span>opt<span class="token punctuation">]</span><span class="token comment"># mv etcd-v3.1.20-linux-amd64/ etcd-v3.1.20</span>opt<span class="token punctuation">]</span><span class="token comment"># ln -s /opt/etcd-v3.1.20/ /opt/etcd</span>opt<span class="token punctuation">]</span><span class="token comment"># ll</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211013135838293.png" alt="image-20211013135838293"></p><h6 id="创建目录，拷贝证书、私钥："><a href="#创建目录，拷贝证书、私钥：" class="headerlink" title="创建目录，拷贝证书、私钥："></a>创建目录，拷贝证书、私钥：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~<span class="token punctuation">]</span><span class="token comment"># useradd -s /sbin/nologin  -M etcd</span>~<span class="token punctuation">]</span><span class="token comment"># mkdir -p /opt/etcd/certs /data/etcd /data/logs/etcd-server</span>~<span class="token punctuation">]</span><span class="token comment"># scp -p /opt/certs/etcd-peer-key.pem 192.168.92.155:/opt/etcd/certs/</span>~<span class="token punctuation">]</span><span class="token comment"># scp -p /opt/certs/etcd-peer.pem  192.168.92.155:/opt/etcd/certs/</span>~<span class="token punctuation">]</span><span class="token comment"># scp -p /opt/certs/ca.pem 192.168.92.155:/opt/etcd/certs/</span>~<span class="token punctuation">]</span><span class="token comment"># chown -R etcd.etcd /opt/etcd/certs /data/etcd /data/logs/etcd-server</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="创建启动脚本："><a href="#创建启动脚本：" class="headerlink" title="创建启动脚本："></a>创建启动脚本：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~<span class="token punctuation">]</span><span class="token comment"># cd /opt/etcd/</span>etcd<span class="token punctuation">]</span><span class="token comment"># cat &gt; etcd-server-startup.sh &lt;&lt; EOF</span><span class="token comment">#!/bin/sh</span>./etcd --name etcd-server-155 <span class="token punctuation">\</span>       --data-dir /data/etcd/etcd-server <span class="token punctuation">\</span>       --listen-peer-urls https://192.168.92.155:2380 <span class="token punctuation">\</span>       --listen-client-urls https://192.168.92.155:2379,http://127.0.0.1:2379 <span class="token punctuation">\</span>       --quota-backend-bytes <span class="token number">8000000000</span> <span class="token punctuation">\</span>       --initial-advertise-peer-urls https://192.168.92.155:2380 <span class="token punctuation">\</span>       --advertise-client-urls https://192.168.92.155:2379,http://127.0.0.1:2379 <span class="token punctuation">\</span>       --initial-cluster  etcd-server-155<span class="token operator">=</span>https://192.168.92.155:2380,etcd-server-156<span class="token operator">=</span>https://192.168.92.156:2380,etcd-server-157<span class="token operator">=</span>https://192.168.92.157:2380 <span class="token punctuation">\</span>       --ca-file ./certs/ca.pem <span class="token punctuation">\</span>       --cert-file ./certs/etcd-peer.pem <span class="token punctuation">\</span>       --key-file ./certs/etcd-peer-key.pem <span class="token punctuation">\</span>       --client-cert-auth  <span class="token punctuation">\</span>       --trusted-ca-file ./certs/ca.pem <span class="token punctuation">\</span>       --peer-ca-file ./certs/ca.pem <span class="token punctuation">\</span>       --peer-cert-file ./certs/etcd-peer.pem <span class="token punctuation">\</span>       --peer-key-file ./certs/etcd-peer-key.pem <span class="token punctuation">\</span>       --peer-client-cert-auth <span class="token punctuation">\</span>       --peer-trusted-ca-file ./certs/ca.pem <span class="token punctuation">\</span>       --log-output stdoutEOFetcd<span class="token punctuation">]</span><span class="token comment"># chmod +x etcd-server-startup.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>修改对应参数，证书秘钥记得拷贝</p><h6 id="安装supervisor进程守护服务："><a href="#安装supervisor进程守护服务：" class="headerlink" title="安装supervisor进程守护服务："></a>安装supervisor进程守护服务：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">etcd<span class="token punctuation">]</span><span class="token comment"># yum -y install supervisor</span>etcd<span class="token punctuation">]</span><span class="token comment"># systemctl enable supervisord --now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="编辑etcd-server启动配置："><a href="#编辑etcd-server启动配置：" class="headerlink" title="编辑etcd-server启动配置："></a>编辑etcd-server启动配置：</h6><pre class="line-numbers language-none"><code class="language-none">etcd]# cat &gt; /etc/supervisord.d/etcd-server.ini &lt;&lt; EOF[program:etcd-server]command=/opt/etcd/etcd-server-startup.sh                        ; the program (relative uses PATH, can take args)numprocs=1                                                      ; number of processes copies to start (def 1)directory=/opt/etcd                                             ; directory to cwd to before exec (def no cwd)autostart=true                                                  ; start at supervisord start (default: true)autorestart=true                                                ; retstart at unexpected quit (default: true)startsecs=30                                                    ; number of secs prog must stay running (def. 1)startretries=3                                                  ; max # of serial start failures (default 3)exitcodes=0,2                                                   ; 'expected' exit codes for process (default 0,2)stopsignal=QUIT                                                 ; signal used to kill process (default TERM)stopwaitsecs=10                                                 ; max num secs to wait b4 SIGKILL (default 10)user=etcd                                                       ; setuid to this UNIX account to run the programredirect_stderr=true                                            ; redirect proc stderr to stdout (default false)killasgroup=true                                                ; kill all process in a groupstopasgroup=true                                                ; stop all process in a groupstdout_logfile=/data/logs/etcd-server/etcd.stdout.log           ; stdout log path, NONE for none; default AUTOstdout_logfile_maxbytes=64MB                                    ; max # logfile bytes b4 rotation (default 50MB)stdout_logfile_backups=4                                        ; # of stdout logfile backups (default 10)stdout_capture_maxbytes=1MB                                     ; number of bytes in 'capturemode' (default 0)stdout_events_enabled=false                                     ; emit events on stdout writes (default false)EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="启动etcd-server服务："><a href="#启动etcd-server服务：" class="headerlink" title="启动etcd-server服务："></a>启动etcd-server服务：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">etcd<span class="token punctuation">]</span><span class="token comment"># supervisorctl update</span><span class="token comment"># 检查服务状态</span>etcd<span class="token punctuation">]</span><span class="token comment"># supervisorctl status</span>etcd-server                      RUNNING   pid <span class="token number">9587</span>, <span class="token function">uptime</span> <span class="token number">0</span>:01:03<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211013144415527.png" alt="image-20211013144415527"></p><h6 id="检查etcd集群状态："><a href="#检查etcd集群状态：" class="headerlink" title="检查etcd集群状态："></a>检查etcd集群状态：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">etcd<span class="token punctuation">]</span><span class="token comment"># ./etcdctl member list</span>etcd<span class="token punctuation">]</span><span class="token comment"># ./etcdctl cluster-health</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211013150240168.png" alt="image-20211013150240168"></p><h5 id="2-安装apiserver组件"><a href="#2-安装apiserver组件" class="headerlink" title="2. 安装apiserver组件"></a>2. 安装apiserver组件</h5><h6 id="集群规划：-2"><a href="#集群规划：-2" class="headerlink" title="集群规划："></a>集群规划：</h6><table><thead><tr><th>主机</th><th>IP</th><th>角色</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>kube-apiserver</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>kube-apiserver</td></tr><tr><td>k8s-node4-2</td><td>192.168.92.157</td><td>kube-apiserver</td></tr></tbody></table><h6 id="下载软件，解压，做软链："><a href="#下载软件，解压，做软链：" class="headerlink" title="下载软件，解压，做软链："></a>下载软件，解压，做软链：</h6><p><a href="https://github.com/kubernetes/kubernetes">kubernetes 下载链接</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~<span class="token punctuation">]</span><span class="token comment"># cd /opt/src</span>src<span class="token punctuation">]</span><span class="token comment"># wget https://dl.k8s.io/v1.17.16/kubernetes-server-linux-amd64.tar.gz</span>src<span class="token punctuation">]</span><span class="token comment"># tar -xf kubernetes-server-linux-amd64-v1.17.16.tar.gz -C /opt/</span>src<span class="token punctuation">]</span><span class="token comment"># cd /opt/</span>opt<span class="token punctuation">]</span><span class="token comment"># mv kubernetes kubernetes-v1.17.16</span>opt<span class="token punctuation">]</span><span class="token comment"># ln -s /opt/kubernetes-v1.17.16 /opt/kubernetes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211013155027768.png" alt="image-20211013155027768"></p><h6 id="整理kubernetes软件包："><a href="#整理kubernetes软件包：" class="headerlink" title="整理kubernetes软件包："></a>整理kubernetes软件包：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">opt<span class="token punctuation">]</span><span class="token comment"># cd kubernetes</span>kubernetes<span class="token punctuation">]</span><span class="token comment"># rm -f kubernetes-src.tar.gz</span>kubernetes<span class="token punctuation">]</span><span class="token comment"># cd server/bin/</span>bin<span class="token punctuation">]</span><span class="token comment"># rm -f *_tag</span>bin<span class="token punctuation">]</span><span class="token comment"># rm -f *.tar</span>bin<span class="token punctuation">]</span><span class="token comment"># ll</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211013160222000.png" alt="image-20211013160222000"></p><h6 id="创建目录，拷贝证书、私钥：-1"><a href="#创建目录，拷贝证书、私钥：-1" class="headerlink" title="创建目录，拷贝证书、私钥："></a>创建目录，拷贝证书、私钥：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bin<span class="token punctuation">]</span><span class="token comment"># mkdir -p /data/logs/kubernetes/kube-apiserver ./certs ./conf</span>bin<span class="token punctuation">]</span><span class="token comment"># scp -p /opt/certs/apiserver-key.pem /opt/certs/apiserver.pem /opt/certs/ca.pem /opt/certs/ca-key.pem  /opt/certs/client-key.pem  /opt/certs/client.pem /opt/certs/metrics-proxy-key.pem /opt/certs/metrics-proxy.pem 192.168.92.155:/opt/kubernetes/server/bin/certs/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211013162023543.png" alt="image-20211013162023543"></p><h6 id="编辑配置文件："><a href="#编辑配置文件：" class="headerlink" title="编辑配置文件："></a>编辑配置文件：</h6><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">bin<span class="token punctuation">]</span><span class="token comment"># cat &gt; conf/audit.yaml &lt;&lt; EOF</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> audit.k8s.io/v1beta1 <span class="token comment"># This is required.</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Policy<span class="token comment"># Don't generate audit events for all requests in RequestReceived stage.</span><span class="token key atrule">omitStages</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">"RequestReceived"</span><span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token comment"># Log pod changes at RequestResponse level</span>  <span class="token punctuation">-</span> <span class="token key atrule">level</span><span class="token punctuation">:</span> RequestResponse    <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">""</span>      <span class="token comment"># Resource "pods" doesn't match requests to any subresource of pods,</span>      <span class="token comment"># which is consistent with the RBAC policy.</span>      <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods"</span><span class="token punctuation">]</span>  <span class="token comment"># Log "pods/log", "pods/status" at Metadata level</span>  <span class="token punctuation">-</span> <span class="token key atrule">level</span><span class="token punctuation">:</span> Metadata    <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">""</span>      <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods/log"</span><span class="token punctuation">,</span> <span class="token string">"pods/status"</span><span class="token punctuation">]</span>  <span class="token comment"># Don't log requests to a configmap called "controller-leader"</span>  <span class="token punctuation">-</span> <span class="token key atrule">level</span><span class="token punctuation">:</span> None    <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">""</span>      <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"configmaps"</span><span class="token punctuation">]</span>      <span class="token key atrule">resourceNames</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"controller-leader"</span><span class="token punctuation">]</span>  <span class="token comment"># Don't log watch requests by the "system:kube-proxy" on endpoints or services</span>  <span class="token punctuation">-</span> <span class="token key atrule">level</span><span class="token punctuation">:</span> None    <span class="token key atrule">users</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"system:kube-proxy"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"watch"</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">""</span> <span class="token comment"># core API group</span>      <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"endpoints"</span><span class="token punctuation">,</span> <span class="token string">"services"</span><span class="token punctuation">]</span>  <span class="token comment"># Don't log authenticated requests to certain non-resource URL paths.</span>  <span class="token punctuation">-</span> <span class="token key atrule">level</span><span class="token punctuation">:</span> None    <span class="token key atrule">userGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"system:authenticated"</span><span class="token punctuation">]</span>    <span class="token key atrule">nonResourceURLs</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">"/api*"</span> <span class="token comment"># Wildcard matching.</span>    <span class="token punctuation">-</span> <span class="token string">"/version"</span>  <span class="token comment"># Log the request body of configmap changes in kube-system.</span>  <span class="token punctuation">-</span> <span class="token key atrule">level</span><span class="token punctuation">:</span> Request    <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">""</span> <span class="token comment"># core API group</span>      <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"configmaps"</span><span class="token punctuation">]</span>    <span class="token comment"># This rule only applies to resources in the "kube-system" namespace.</span>    <span class="token comment"># The empty string "" can be used to select non-namespaced resources.</span>    <span class="token key atrule">namespaces</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"kube-system"</span><span class="token punctuation">]</span>  <span class="token comment"># Log configmap and secret changes in all other namespaces at the Metadata level.</span>  <span class="token punctuation">-</span> <span class="token key atrule">level</span><span class="token punctuation">:</span> Metadata    <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">""</span> <span class="token comment"># core API group</span>      <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"secrets"</span><span class="token punctuation">,</span> <span class="token string">"configmaps"</span><span class="token punctuation">]</span>  <span class="token comment"># Log all other resources in core and extensions at the Request level.</span>  <span class="token punctuation">-</span> <span class="token key atrule">level</span><span class="token punctuation">:</span> Request    <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">""</span> <span class="token comment"># core API group</span>    <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">"extensions"</span> <span class="token comment"># Version of group should NOT be included.</span>  <span class="token comment"># A catch-all rule to log all other requests at the Metadata level.</span>  <span class="token punctuation">-</span> <span class="token key atrule">level</span><span class="token punctuation">:</span> Metadata    <span class="token comment"># Long-running requests like watches that fall under this rule will not</span>    <span class="token comment"># generate an audit event in RequestReceived.</span>    <span class="token key atrule">omitStages</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"RequestReceived"</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑启动脚本："><a href="#编辑启动脚本：" class="headerlink" title="编辑启动脚本："></a>编辑启动脚本：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bin<span class="token punctuation">]</span><span class="token comment"># cat &gt; kube-apiserver.sh &lt;&lt; EOF</span><span class="token comment">#!/bin/bash</span>./kube-apiserver <span class="token punctuation">\</span>  --apiserver-count <span class="token number">2</span> <span class="token punctuation">\</span>  --audit-log-path /data/logs/kubernetes/kube-apiserver/audit-log <span class="token punctuation">\</span>  --audit-policy-file ./conf/audit.yaml <span class="token punctuation">\</span>  --authorization-mode RBAC <span class="token punctuation">\</span>  --client-ca-file ./certs/ca.pem <span class="token punctuation">\</span>  --requestheader-client-ca-file ./certs/ca.pem <span class="token punctuation">\</span>  --enable-admission-plugins NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota <span class="token punctuation">\</span>  --etcd-cafile ./certs/ca.pem <span class="token punctuation">\</span>  --etcd-certfile ./certs/client.pem <span class="token punctuation">\</span>  --etcd-keyfile ./certs/client-key.pem <span class="token punctuation">\</span>  --etcd-servers https://192.168.92.155:2379,https://192.168.92.156:2379,https://192.168.92.157:2379 <span class="token punctuation">\</span>  --service-account-key-file ./certs/ca-key.pem <span class="token punctuation">\</span>  --service-cluster-ip-range <span class="token number">10.96</span>.0.0/22 <span class="token punctuation">\</span>  --service-node-port-range <span class="token number">3000</span>-29999 <span class="token punctuation">\</span>  --target-ram-mb<span class="token operator">=</span><span class="token number">1024</span> <span class="token punctuation">\</span>  --kubelet-client-certificate ./certs/client.pem <span class="token punctuation">\</span>  --kubelet-client-key ./certs/client-key.pem <span class="token punctuation">\</span>  --log-dir  /data/logs/kubernetes/kube-apiserver <span class="token punctuation">\</span>  --tls-cert-file ./certs/apiserver.pem <span class="token punctuation">\</span>  --tls-private-key-file ./certs/apiserver-key.pem <span class="token punctuation">\</span>  --proxy-client-cert-file ./certs/metrics-proxy.pem <span class="token punctuation">\</span>  --proxy-client-key-file ./certs/metrics-proxy-key.pem <span class="token punctuation">\</span>  --requestheader-client-ca-file ./certs/ca.pem <span class="token punctuation">\</span>  --requestheader-allowed-names<span class="token operator">=</span> <span class="token punctuation">\</span>  --requestheader-extra-headers-prefix<span class="token operator">=</span>X-Remote-Extra- <span class="token punctuation">\</span>  --requestheader-group-headers<span class="token operator">=</span>X-Remote-Group <span class="token punctuation">\</span>  --requestheader-username-headers<span class="token operator">=</span>X-Remote-User <span class="token punctuation">\</span>  --v <span class="token number">2</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑kube-apiserver启动配置："><a href="#编辑kube-apiserver启动配置：" class="headerlink" title="编辑kube-apiserver启动配置："></a>编辑kube-apiserver启动配置：</h6><pre class="line-numbers language-none"><code class="language-none">bin]# cat &gt; /etc/supervisord.d/kube-apiserver.ini &lt;&lt; EOF[program:kube-apiserver]command=/opt/kubernetes/server/bin/kube-apiserver.shnumprocs=1directory=/opt/kubernetes/server/binautostart=trueautorestart=truestartsecs=30startretries=3exitcodes=0,2stopsignal=QUITstopwaitsecs=10user=rootredirect_stderr=truekillasgroup=truestopasgroup=truestdout_logfile=/data/logs/kubernetes/kube-apiserver/apiserver.stdout.logstdout_logfile_maxbytes=64MBstdout_logfile_backups=4stdout_capture_maxbytes=1MBstdout_events_enabled=falseEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="启动kube-apiserver并检查："><a href="#启动kube-apiserver并检查：" class="headerlink" title="启动kube-apiserver并检查："></a>启动kube-apiserver并检查：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bin<span class="token punctuation">]</span><span class="token comment"># supervisorctl update</span>bin<span class="token punctuation">]</span><span class="token comment"># supervisorctl status</span>bin<span class="token punctuation">]</span><span class="token comment"># ss -nutlp | egrep "8080|6443"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211013163102110.png" alt="image-20211013163102110"></p><p><strong>注意：</strong>其他节点修改对应参数并启动</p><h5 id="3-配置nginx四层反向代理"><a href="#3-配置nginx四层反向代理" class="headerlink" title="3. 配置nginx四层反向代理"></a>3. 配置nginx四层反向代理</h5><h6 id="集群规划：-3"><a href="#集群规划：-3" class="headerlink" title="集群规划："></a>集群规划：</h6><table><thead><tr><th>主机</th><th>IP</th><th>版本</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>1.20.1</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>1.20.1</td></tr></tbody></table><h6 id="软件安装："><a href="#软件安装：" class="headerlink" title="软件安装："></a>软件安装：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># yum -y install nginx nginx-mod-stream</span>k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># systemctl enable nginx --now</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="编辑配置文件-etc-nginx-nginx-conf："><a href="#编辑配置文件-etc-nginx-nginx-conf：" class="headerlink" title="编辑配置文件/etc/nginx/nginx.conf："></a>编辑配置文件/etc/nginx/nginx.conf：</h6><p>新增以下配置</p><pre class="line-numbers language-none"><code class="language-none">stream {    upstream kube-apiserver {        server 192.168.92.155:6443     max_fails=3 fail_timeout=30s;        server 192.168.92.156:6443     max_fails=3 fail_timeout=30s;        server 192.168.92.157:6443     max_fails=3 fail_timeout=30s;    }    server {        listen 7443;        proxy_connect_timeout 2s;        proxy_timeout 900s;        proxy_pass kube-apiserver;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong><code>stream</code>模块与<code>http</code>模块同级，所以<code>stream</code>模块配置不能编写入<code>http</code>模块中。</p><h6 id="启动并设置开机自启-1"><a href="#启动并设置开机自启-1" class="headerlink" title="启动并设置开机自启"></a>启动并设置开机自启</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># systemctl enable nginx --now</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意：</strong>这里以k8s-master4主机为例，另一台k8s-node4-1需要相同操作</p><h5 id="4-安装keepalived负载均衡"><a href="#4-安装keepalived负载均衡" class="headerlink" title="4. 安装keepalived负载均衡"></a>4. 安装keepalived负载均衡</h5><h6 id="集群规划：-4"><a href="#集群规划：-4" class="headerlink" title="集群规划："></a>集群规划：</h6><table><thead><tr><th>主机名</th><th>IP</th><th>角色</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>master</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>backup</td></tr></tbody></table><p>VIP：192.168.92.154</p><h6 id="安装keepalived服务："><a href="#安装keepalived服务：" class="headerlink" title="安装keepalived服务："></a>安装keepalived服务：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># yum install keepalived -y</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="编辑检查脚本："><a href="#编辑检查脚本：" class="headerlink" title="编辑检查脚本："></a>编辑检查脚本：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># cat &gt; /etc/keepalived/check_port.sh &lt;&lt; "EOF"</span><span class="token comment">#!/bin/bash</span><span class="token assign-left variable">CHK_PORT</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$CHK_PORT</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>        <span class="token assign-left variable">PORT_PROCESS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">netstat</span> -nutlp<span class="token operator">|</span><span class="token function">grep</span> $CHK_PORT<span class="token operator">|</span><span class="token function">wc</span> -l<span class="token variable">`</span></span>        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$PORT_PROCESS</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>                <span class="token builtin class-name">echo</span> <span class="token string">"Port <span class="token variable">$CHK_PORT</span> Is Not Used,End."</span>                <span class="token builtin class-name">exit</span> <span class="token number">1</span>        <span class="token keyword">fi</span><span class="token keyword">else</span>        <span class="token builtin class-name">echo</span> <span class="token string">"Check Port Cant Be Empty!"</span><span class="token keyword">fi</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="添加执行权限并测试脚本："><a href="#添加执行权限并测试脚本：" class="headerlink" title="添加执行权限并测试脚本："></a>添加执行权限并测试脚本：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># chmod +x /etc/keepalived/check_port.sh</span>k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># /etc/keepalived/check_port.sh</span>k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># /etc/keepalived/check_port.sh 25452</span>k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># /etc/keepalived/check_port.sh 8080</span>k8s-master4 ~<span class="token punctuation">]</span><span class="token comment"># /etc/keepalived/check_port.sh 7443</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211013174227949.png" alt="image-20211013174227949"></p><p>**PS:**无输出证明端口存活</p><h6 id="编辑keepalived配置文件："><a href="#编辑keepalived配置文件：" class="headerlink" title="编辑keepalived配置文件："></a>编辑keepalived配置文件：</h6><p><strong>注意：</strong>这里两台服务器keepalived配置略有不同，在下面分别贴出</p><pre class="line-numbers language-none"><code class="language-none"># k8s-master4主机keepalived配置如下：k8s-master4 ~]# cat &gt; /etc/keepalived/keepalived.conf &lt;&lt; EOFglobal_defs {   router_id 192.168.92.155}vrrp_script chk_nginx {    script "/etc/keepalived/check_port.sh 7443"    interval 2    weight -20}vrrp_instance VI_1 {    state MASTER    interface ens32    virtual_router_id 251    priority 100    advert_int 1    mcast_src_ip 192.168.92.155    nopreempt    authentication {        auth_type PASS        auth_pass 12345678    }    track_script {         chk_nginx    }    virtual_ipaddress {        192.168.92.154    }}EOF# k8s-node4-1主机keepalived配置如下：k8s-node4-1 ~]# cat &gt; /etc/keepalived/keepalived.conf &lt;&lt; EOFglobal_defs {    router_id 192.168.92.156}vrrp_script chk_nginx {    script "/etc/keepalived/check_port.sh 7443"    interval 2    weight -20}vrrp_instance VI_1 {    state BACKUP    interface ens32    virtual_router_id 251    mcast_src_ip 192.168.92.156    priority 90    advert_int 1    authentication {        auth_type PASS        auth_pass 12345678    }    track_script {        chk_nginx    }    virtual_ipaddress {        192.168.92.154    }}EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="启动keepalived服务："><a href="#启动keepalived服务：" class="headerlink" title="启动keepalived服务："></a>启动keepalived服务：</h6><pre class="line-numbers language-none"><code class="language-none">k8s-master4 ~]# systemctl enable keepalived --now<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="检查keepalived服务："><a href="#检查keepalived服务：" class="headerlink" title="检查keepalived服务："></a>检查keepalived服务：<img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211013184735757.png" alt="image-20211013184735757"></h6><h5 id="5-安装kube-controller-manager组件"><a href="#5-安装kube-controller-manager组件" class="headerlink" title="5. 安装kube-controller-manager组件"></a>5. 安装kube-controller-manager组件</h5><h6 id="集群规划：-5"><a href="#集群规划：-5" class="headerlink" title="集群规划："></a>集群规划：</h6><table><thead><tr><th>主机</th><th>IP</th><th>角色</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>kube-controller-manager</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>kube-controller-manager</td></tr><tr><td>k8s-node4-2</td><td>192.168.92.157</td><td>kube-controller-manager</td></tr></tbody></table><h6 id="编辑启动脚本：-1"><a href="#编辑启动脚本：-1" class="headerlink" title="编辑启动脚本："></a>编辑启动脚本：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">~<span class="token punctuation">]</span><span class="token comment"># cd /opt/kubernetes/server/bin/</span>k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># cat &gt; kube-controller-manager.sh &lt;&lt; EOF</span><span class="token comment">#!/bin/sh</span>./kube-controller-manager <span class="token punctuation">\</span>  --cluster-cidr <span class="token number">172.92</span>.0.0/16 <span class="token punctuation">\</span>  --leader-elect <span class="token boolean">true</span> <span class="token punctuation">\</span>  --log-dir /data/logs/kubernetes/kube-controller-manager <span class="token punctuation">\</span>  --master http://127.0.0.1:8080 <span class="token punctuation">\</span>  --service-account-private-key-file ./certs/ca-key.pem <span class="token punctuation">\</span>  --service-cluster-ip-range <span class="token number">10.96</span>.0.0/22 <span class="token punctuation">\</span>  --root-ca-file ./certs/ca.pem <span class="token punctuation">\</span>  --v <span class="token number">2</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑supervisor配置文件："><a href="#编辑supervisor配置文件：" class="headerlink" title="编辑supervisor配置文件："></a>编辑supervisor配置文件：</h6><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini">bin]# cat &gt; /etc/supervisord.d/kube-controller-manager.ini &lt;&lt; EOF<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">program:kube-controller-manager</span><span class="token punctuation">]</span></span><span class="token key attr-name">command</span><span class="token punctuation">=</span><span class="token value attr-value">/opt/kubernetes/server/bin/kube-controller-manager.sh</span><span class="token key attr-name">numprocs</span><span class="token punctuation">=</span><span class="token value attr-value">1</span><span class="token key attr-name">directory</span><span class="token punctuation">=</span><span class="token value attr-value">/opt/kubernetes/server/bin</span><span class="token key attr-name">autostart</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">autorestart</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">startsecs</span><span class="token punctuation">=</span><span class="token value attr-value">30</span><span class="token key attr-name">startretries</span><span class="token punctuation">=</span><span class="token value attr-value">3</span><span class="token key attr-name">exitcodes</span><span class="token punctuation">=</span><span class="token value attr-value">0,2</span><span class="token key attr-name">stopsignal</span><span class="token punctuation">=</span><span class="token value attr-value">QUIT</span><span class="token key attr-name">stopwaitsecs</span><span class="token punctuation">=</span><span class="token value attr-value">10</span><span class="token key attr-name">user</span><span class="token punctuation">=</span><span class="token value attr-value">root</span><span class="token key attr-name">redirect_stderr</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">killasgroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">stopasgroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">stdout_logfile</span><span class="token punctuation">=</span><span class="token value attr-value">/data/logs/kubernetes/kube-controller-manager/controller.stdout.log</span><span class="token key attr-name">stdout_logfile_maxbytes</span><span class="token punctuation">=</span><span class="token value attr-value">64MB</span><span class="token key attr-name">stdout_logfile_backups</span><span class="token punctuation">=</span><span class="token value attr-value">4</span><span class="token key attr-name">stdout_capture_maxbytes</span><span class="token punctuation">=</span><span class="token value attr-value">1MB</span><span class="token key attr-name">stdout_events_enabled</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="创建目录与添加执行权限："><a href="#创建目录与添加执行权限：" class="headerlink" title="创建目录与添加执行权限："></a>创建目录与添加执行权限：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bin<span class="token punctuation">]</span><span class="token comment"># mkdir -p /data/logs/kubernetes/kube-controller-manager</span>bin<span class="token punctuation">]</span><span class="token comment"># chmod +x ./kube-controller-manager.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="启动与检查："><a href="#启动与检查：" class="headerlink" title="启动与检查："></a>启动与检查：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bin<span class="token punctuation">]</span><span class="token comment"># supervisorctl update</span>bin<span class="token punctuation">]</span><span class="token comment"># supervisorctl status</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014075502807.png" alt="image-20211014075502807"></p><h5 id="6-安装kube-scheduler组件"><a href="#6-安装kube-scheduler组件" class="headerlink" title="6. 安装kube-scheduler组件"></a>6. 安装kube-scheduler组件</h5><h6 id="集群规划：-6"><a href="#集群规划：-6" class="headerlink" title="集群规划："></a>集群规划：</h6><table><thead><tr><th>主机</th><th>IP</th><th>角色</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>kube-scheduler</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>kube-scheduler</td></tr><tr><td>k8s-node4-2</td><td>192.168.92.157</td><td>kube-scheduler</td></tr></tbody></table><h6 id="编辑启动脚本：-2"><a href="#编辑启动脚本：-2" class="headerlink" title="编辑启动脚本："></a>编辑启动脚本：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bin<span class="token punctuation">]</span><span class="token comment"># cat &gt; kube-scheduler.sh &lt;&lt; EOF</span><span class="token comment">#!/bin/sh</span>./kube-scheduler <span class="token punctuation">\</span>  --leader-elect  <span class="token punctuation">\</span>  --log-dir /data/logs/kubernetes/kube-scheduler <span class="token punctuation">\</span>  --master http://127.0.0.1:8080 <span class="token punctuation">\</span>  --v <span class="token number">2</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑supervisor管理配置："><a href="#编辑supervisor管理配置：" class="headerlink" title="编辑supervisor管理配置："></a>编辑supervisor管理配置：</h6><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini">bin]# cat &gt; /etc/supervisord.d/kube-scheduler.ini &lt;&lt; EOF<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">program:kube-scheduler</span><span class="token punctuation">]</span></span><span class="token key attr-name">command</span><span class="token punctuation">=</span><span class="token value attr-value">/opt/kubernetes/server/bin/kube-scheduler.sh</span><span class="token key attr-name">numprocs</span><span class="token punctuation">=</span><span class="token value attr-value">1</span><span class="token key attr-name">directory</span><span class="token punctuation">=</span><span class="token value attr-value">/opt/kubernetes/server/bin</span><span class="token key attr-name">autostart</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">autorestart</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">startsecs</span><span class="token punctuation">=</span><span class="token value attr-value">30</span><span class="token key attr-name">startretries</span><span class="token punctuation">=</span><span class="token value attr-value">3</span><span class="token key attr-name">exitcodes</span><span class="token punctuation">=</span><span class="token value attr-value">0,2</span><span class="token key attr-name">stopsignal</span><span class="token punctuation">=</span><span class="token value attr-value">QUIT</span><span class="token key attr-name">stopwaitsecs</span><span class="token punctuation">=</span><span class="token value attr-value">10</span><span class="token key attr-name">user</span><span class="token punctuation">=</span><span class="token value attr-value">root</span><span class="token key attr-name">redirect_stderr</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">killasgroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">stopasgroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">stdout_logfile</span><span class="token punctuation">=</span><span class="token value attr-value">/data/logs/kubernetes/kube-scheduler/scheduler.stdout.log</span><span class="token key attr-name">stdout_logfile_maxbytes</span><span class="token punctuation">=</span><span class="token value attr-value">64MB</span><span class="token key attr-name">stdout_logfile_backups</span><span class="token punctuation">=</span><span class="token value attr-value">4</span><span class="token key attr-name">stdout_capture_maxbytes</span><span class="token punctuation">=</span><span class="token value attr-value">1MB</span><span class="token key attr-name">stdout_events_enabled</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="创建目录与添加执行权限：-1"><a href="#创建目录与添加执行权限：-1" class="headerlink" title="创建目录与添加执行权限："></a>创建目录与添加执行权限：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bin<span class="token punctuation">]</span><span class="token comment"># mkdir -p /data/logs/kubernetes/kube-scheduler</span>bin<span class="token punctuation">]</span><span class="token comment"># chmod +x ./kube-scheduler.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="启动与检查：-1"><a href="#启动与检查：-1" class="headerlink" title="启动与检查："></a>启动与检查：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bin<span class="token punctuation">]</span><span class="token comment"># supervisorctl update</span>bin<span class="token punctuation">]</span><span class="token comment"># supervisorctl status</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014080834445.png" alt="image-20211014080834445"></p><h5 id="7-主控节点环境检查"><a href="#7-主控节点环境检查" class="headerlink" title="7. 主控节点环境检查"></a>7. 主控节点环境检查</h5><h6 id="环境检查："><a href="#环境检查：" class="headerlink" title="环境检查："></a>环境检查：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># yum install bash-completion -y</span>k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># kubectl completion bash &gt; /etc/bash_completion.d/kubelet</span>k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># kubectl get cs</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014081827976.png" alt="image-20211014081827976"></p><p>如图：各组件状态Healthy则为正常，下面安装运算节点组件</p><h4 id="三、部署运算节点"><a href="#三、部署运算节点" class="headerlink" title="三、部署运算节点"></a>三、部署运算节点</h4><h5 id="1-安装kubelet组件"><a href="#1-安装kubelet组件" class="headerlink" title="1. 安装kubelet组件"></a>1. 安装kubelet组件</h5><h6 id="集群规划：-7"><a href="#集群规划：-7" class="headerlink" title="集群规划："></a>集群规划：</h6><table><thead><tr><th>主机</th><th>IP</th><th>角色</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>kube-kubelet</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>kube-kubelet</td></tr><tr><td>k8s-node4-2</td><td>192.168.92.157</td><td>kube-kubelet</td></tr></tbody></table><h6 id="配置用户context文件："><a href="#配置用户context文件：" class="headerlink" title="配置用户context文件："></a>配置用户context文件：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">k8s-master4 conf<span class="token punctuation">]</span><span class="token comment"># kubectl config set-cluster myk8s \</span>  --certificate-authority<span class="token operator">=</span><span class="token punctuation">..</span>/certs/ca.pem <span class="token punctuation">\</span>  --embed-certs<span class="token operator">=</span>true <span class="token punctuation">\</span>  --server<span class="token operator">=</span>https://192.168.92.154:7443 <span class="token punctuation">\</span>  --kubeconfig<span class="token operator">=</span>kubelet.kubeconfigk8s-master4 conf<span class="token punctuation">]</span><span class="token comment"># kubectl config set-credentials k8s-node \</span>  --client-certificate<span class="token operator">=</span><span class="token punctuation">..</span>/certs/client.pem <span class="token punctuation">\</span>  --client-key<span class="token operator">=</span><span class="token punctuation">..</span>/certs/client-key.pem <span class="token punctuation">\</span>  --embed-certs<span class="token operator">=</span>true <span class="token punctuation">\</span>  --kubeconfig<span class="token operator">=</span>kubelet.kubeconfigk8s-master4 conf<span class="token punctuation">]</span><span class="token comment"># kubectl config set-context myk8s-context \</span>  --cluster<span class="token operator">=</span>myk8s <span class="token punctuation">\</span>  --user<span class="token operator">=</span>k8s-node <span class="token punctuation">\</span>  --kubeconfig<span class="token operator">=</span>kubelet.kubeconfigk8s-master4 conf<span class="token punctuation">]</span><span class="token comment"># kubectl config use-context myk8s-context --kubeconfig=kubelet.kubeconfig</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑RBAC权限文件："><a href="#编辑RBAC权限文件：" class="headerlink" title="编辑RBAC权限文件："></a>编辑RBAC权限文件：</h6><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">k8s<span class="token punctuation">-</span>master4 conf<span class="token punctuation">]</span><span class="token comment"># cat &gt; k8s-node.yaml &lt;&lt; EOF</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> k8s<span class="token punctuation">-</span>node<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> cluster<span class="token punctuation">-</span>admin<span class="token key atrule">subjects</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> User  <span class="token key atrule">name</span><span class="token punctuation">:</span> k8s<span class="token punctuation">-</span>nodeEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="执行RBAC文件："><a href="#执行RBAC文件：" class="headerlink" title="执行RBAC文件："></a>执行RBAC文件：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">k8s-master4 conf<span class="token punctuation">]</span><span class="token comment"># kubectl create -f k8s-node.yaml</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211015100027389.png" alt="image-20211015100027389"></p><p><strong>注意：</strong>这里绑定的<code>ClusterRole</code>是<code>cluster-admin</code>权限为最高建议</p><h6 id="上传文件与证书、秘钥到其他节点："><a href="#上传文件与证书、秘钥到其他节点：" class="headerlink" title="上传文件与证书、秘钥到其他节点："></a>上传文件与证书、秘钥到其他节点：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">k8s-master4 conf<span class="token punctuation">]</span><span class="token comment"># scp -p kubelet.kubeconfig k8s-node.yaml 192.168.92.156:/opt/kubernetes/server/bin/conf/</span>k8s-master4 conf<span class="token punctuation">]</span><span class="token comment"># scp -p kubelet.kubeconfig k8s-node.yaml 192.168.92.157:/opt/kubernetes/server/bin/conf/</span>k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># cp -p /opt/certs/kubelet.pem /opt/certs/kubelet-key.pem ../certs/</span>k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># scp -p /opt/certs/kubelet.pem /opt/certs/kubelet-key.pem 192.168.92.156:/opt/kubernetes/server/bin/certs/</span>k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># scp -p /opt/certs/kubelet.pem /opt/certs/kubelet-key.pem 192.168.92.157:/opt/kubernetes/server/bin/certs/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑启动脚本与配置："><a href="#编辑启动脚本与配置：" class="headerlink" title="编辑启动脚本与配置："></a>编辑启动脚本与配置：</h6><pre class="line-numbers language-none"><code class="language-none"># kubelet配置文件kubelet.yamlconf]# cat &gt; kubelet.yaml &lt;&lt; EOFapiVersion: kubelet.config.k8s.io/v1beta1kind: KubeletConfigurationcgroupDriver: systemdclusterDNS:- 10.96.0.2clusterDomain: cluster.localEOF# kubelet启动脚本kubelet.shconf]# cat &gt; ../kubelet.sh &lt;&lt; EOF#!/bin/sh./kubelet \  --anonymous-auth=false \  --bootstrap-kubeconfig=./conf/bootstrap-kubelet.conf \  --kubeconfig=./conf/kubelet.kubeconfig \  --config=./conf/kubelet.yaml \  --fail-swap-on="false" \  --client-ca-file ./certs/ca.pem \  --tls-cert-file ./certs/kubelet.pem \  --tls-private-key-file ./certs/kubelet-key.pem \  --container-runtime=remote \  --container-runtime-endpoint=/run/containerd/containerd.sock \  --pod-infra-container-image=docker.io/kubernetes/pause:latest \  --hostname-override k8s-master4 \  --image-gc-high-threshold 20 \  --image-gc-low-threshold 10 \  --log-dir /data/logs/kubernetes/kube-kubelet \  --root-dir /data/kubeletEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑supervisor管理配置：-1"><a href="#编辑supervisor管理配置：-1" class="headerlink" title="编辑supervisor管理配置："></a>编辑supervisor管理配置：</h6><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini">bin]# cat &gt; /etc/supervisord.d/kube-kubelet.ini &lt;&lt; EOF<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">program:kube-kubelet</span><span class="token punctuation">]</span></span><span class="token key attr-name">command</span><span class="token punctuation">=</span><span class="token value attr-value">/opt/kubernetes/server/bin/kubelet.sh     ; the program (relative uses PATH, can take args)</span><span class="token key attr-name">numprocs</span><span class="token punctuation">=</span><span class="token value attr-value">1                                        ; number of processes copies to start (def 1)</span><span class="token key attr-name">directory</span><span class="token punctuation">=</span><span class="token value attr-value">/opt/kubernetes/server/bin              ; directory to cwd to before exec (def no cwd)</span><span class="token key attr-name">autostart</span><span class="token punctuation">=</span><span class="token value attr-value">true                                    ; start at supervisord start (default: true)</span><span class="token key attr-name">autorestart</span><span class="token punctuation">=</span><span class="token value attr-value">true                                ; retstart at unexpected quit (default: true)</span><span class="token key attr-name">startsecs</span><span class="token punctuation">=</span><span class="token value attr-value">30                                      ; number of secs prog must stay running (def. 1)</span><span class="token key attr-name">startretries</span><span class="token punctuation">=</span><span class="token value attr-value">3                                    ; max # of serial start failures (default 3)</span><span class="token key attr-name">exitcodes</span><span class="token punctuation">=</span><span class="token value attr-value">0,2                                     ; 'expected' exit codes for process (default 0,2)</span><span class="token key attr-name">stopsignal</span><span class="token punctuation">=</span><span class="token value attr-value">QUIT                                   ; signal used to kill process (default TERM)</span><span class="token key attr-name">stopwaitsecs</span><span class="token punctuation">=</span><span class="token value attr-value">10                                   ; max num secs to wait b4 SIGKILL (default 10)</span><span class="token key attr-name">user</span><span class="token punctuation">=</span><span class="token value attr-value">root                                         ; setuid to this UNIX account to run the program</span><span class="token key attr-name">redirect_stderr</span><span class="token punctuation">=</span><span class="token value attr-value">true                              ; redirect proc stderr to stdout (default false)</span><span class="token key attr-name">killasgroup</span><span class="token punctuation">=</span><span class="token value attr-value">true                                  ; kill all process in a group</span><span class="token key attr-name">stopasgroup</span><span class="token punctuation">=</span><span class="token value attr-value">true                                  ; stop all process in a group</span><span class="token key attr-name">stdout_logfile</span><span class="token punctuation">=</span><span class="token value attr-value">/data/logs/kubernetes/kube-kubelet/kubelet.stdout.log   ; stderr log path, NONE for none; default AUTO</span><span class="token key attr-name">stdout_logfile_maxbytes</span><span class="token punctuation">=</span><span class="token value attr-value">64MB                      ; max # logfile bytes b4 rotation (default 50MB)</span><span class="token key attr-name">stdout_logfile_backups</span><span class="token punctuation">=</span><span class="token value attr-value">4                          ; # of stdout logfile backups (default 10)</span><span class="token key attr-name">stdout_capture_maxbytes</span><span class="token punctuation">=</span><span class="token value attr-value">1MB                       ; number of bytes in 'capturemode' (default 0)</span><span class="token key attr-name">stdout_events_enabled</span><span class="token punctuation">=</span><span class="token value attr-value">false                       ; emit events on stdout writes (default false)</span>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="创建目录添加执行权限："><a href="#创建目录添加执行权限：" class="headerlink" title="创建目录添加执行权限："></a>创建目录添加执行权限：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bin<span class="token punctuation">]</span><span class="token comment"># chmod +x ../kubelet.sh</span>bin<span class="token punctuation">]</span><span class="token comment"># mkdir -p /data/logs/kubernetes/kube-kubelet /data/kubelet</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="启动并检查："><a href="#启动并检查：" class="headerlink" title="启动并检查："></a>启动并检查：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bin<span class="token punctuation">]</span><span class="token comment"># supervisorctl update</span>bin<span class="token punctuation">]</span><span class="token comment"># supervisorctl status</span>bin<span class="token punctuation">]</span><span class="token comment"># tail -fn20 /data/logs/kubernetes/kube-kubelet/kubelet.stdout.log</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014095028549.png" alt="image-20211014095028549"></p><p>因没开启健康检查参数与指定端点，日志中有健康检查错误可以忽略。</p><pre class="line-numbers language-none"><code class="language-none">bin]# kubectl get nodes -o wide<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014095503004.png" alt="image-20211014095503004"></p><h5 id="2-安装kube-proxy组件"><a href="#2-安装kube-proxy组件" class="headerlink" title="2. 安装kube-proxy组件"></a>2. 安装kube-proxy组件</h5><h6 id="集群规划：-8"><a href="#集群规划：-8" class="headerlink" title="集群规划："></a>集群规划：</h6><table><thead><tr><th>主机</th><th>IP</th><th>角色</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>kube-proxy</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>kube-proxy</td></tr><tr><td>k8s-node4-2</td><td>192.168.92.157</td><td>kube-proxy</td></tr></tbody></table><h6 id="软件包安装与模块检查："><a href="#软件包安装与模块检查：" class="headerlink" title="软件包安装与模块检查："></a>软件包安装与模块检查：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~<span class="token punctuation">]</span><span class="token comment"># cd /opt/kubernetes/server/bin/</span>bin<span class="token punctuation">]</span><span class="token comment"># yum -y install ipset ipvsadm</span>bin<span class="token punctuation">]</span><span class="token comment"># lsmod | grep ip_vs</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014101045857.png" alt="image-20211014101045857"></p><h6 id="创建目录与拷贝证书、秘钥："><a href="#创建目录与拷贝证书、秘钥：" class="headerlink" title="创建目录与拷贝证书、秘钥："></a>创建目录与拷贝证书、秘钥：</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bin<span class="token punctuation">]</span><span class="token comment"># mkdir -p /data/logs/kubernetes/kube-proxy</span>k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># cp -p /opt/certs/kube-proxy-client-key.pem /opt/certs/kube-proxy-client.pem ./certs/</span>k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># scp -p /opt/certs/kube-proxy-client-key.pem /opt/certs/kube-proxy-client.pem 192.168.92.157:/opt/kubernetes/server/bin/certs/</span>k8s-master4 bin<span class="token punctuation">]</span><span class="token comment"># scp -p /opt/certs/kube-proxy-client-key.pem /opt/certs/kube-proxy-client.pem 192.168.92.157:/opt/kubernetes/server/bin/certs/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="创建资源文件并拷贝至其他节点："><a href="#创建资源文件并拷贝至其他节点：" class="headerlink" title="创建资源文件并拷贝至其他节点："></a>创建资源文件并拷贝至其他节点：</h6><pre class="line-numbers language-none"><code class="language-none">k8s-master4 bin]# cd /opt/kubernetes/server/bin/conf/k8s-master4 conf]# kubectl config set-cluster myk8s \  --certificate-authority=../certs/ca.pem \  --embed-certs=true \  --server=https://192.168.92.154:7443 \  --kubeconfig=kube-proxy.kubeconfigk8s-master4 conf]# kubectl config set-credentials kube-proxy \  --client-certificate=../certs/kube-proxy-client.pem \  --client-key=../certs/kube-proxy-client-key.pem \  --embed-certs=true \  --kubeconfig=kube-proxy.kubeconfigk8s-master4 conf]# kubectl config set-context myk8s-context \  --cluster=myk8s \  --user=kube-proxy \  --kubeconfig=kube-proxy.kubeconfig  k8s-master4 conf]# kubectl config use-context myk8s-context --kubeconfig=kube-proxy.kubeconfigk8s-master4 conf]# scp -p kube-proxy.kubeconfig 192.168.92.156:/opt/kubernetes/server/bin/conf/k8s-master4 conf]# scp -p kube-proxy.kubeconfig 192.168.92.157:/opt/kubernetes/server/bin/conf/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑启动脚本：-3"><a href="#编辑启动脚本：-3" class="headerlink" title="编辑启动脚本："></a>编辑启动脚本：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">conf<span class="token punctuation">]</span><span class="token comment"># cat &gt; ../kube-proxy.sh &lt;&lt; EOF</span><span class="token comment">#!/bin/sh</span>./kube-proxy <span class="token punctuation">\</span>  --cluster-cidr <span class="token number">172.92</span>.0.0/16 <span class="token punctuation">\</span>  --hostname-override  k8s-master4 <span class="token punctuation">\</span>  --proxy-mode<span class="token operator">=</span>ipvs <span class="token punctuation">\</span>  --ipvs-scheduler<span class="token operator">=</span>nq <span class="token punctuation">\</span>  --kubeconfig ./conf/kube-proxy.kubeconfigEOFconf<span class="token punctuation">]</span><span class="token comment"># chmod +x ../kube-proxy.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑supervisor管理配置：-2"><a href="#编辑supervisor管理配置：-2" class="headerlink" title="编辑supervisor管理配置："></a>编辑supervisor管理配置：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">conf<span class="token punctuation">]</span><span class="token comment"># cat &gt; /etc/supervisord.d/kube-proxy.ini &lt;&lt; EOF</span><span class="token punctuation">[</span>program:kube-proxy<span class="token punctuation">]</span><span class="token assign-left variable">command</span><span class="token operator">=</span>/opt/kubernetes/server/bin/kube-proxy.sh<span class="token assign-left variable">numprocs</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">directory</span><span class="token operator">=</span>/opt/kubernetes/server/bin<span class="token assign-left variable">autostart</span><span class="token operator">=</span>true<span class="token assign-left variable">autorestart</span><span class="token operator">=</span>true<span class="token assign-left variable">startsecs</span><span class="token operator">=</span><span class="token number">30</span><span class="token assign-left variable">startretries</span><span class="token operator">=</span><span class="token number">3</span><span class="token assign-left variable">exitcodes</span><span class="token operator">=</span><span class="token number">0,2</span><span class="token assign-left variable">stopsignal</span><span class="token operator">=</span>QUIT<span class="token assign-left variable">stopwaitsecs</span><span class="token operator">=</span><span class="token number">10</span><span class="token assign-left variable">user</span><span class="token operator">=</span>root<span class="token assign-left variable">redirect_stderr</span><span class="token operator">=</span>true<span class="token assign-left variable">killasgroup</span><span class="token operator">=</span>true<span class="token assign-left variable">stopasgroup</span><span class="token operator">=</span>true<span class="token assign-left variable">stdout_logfile</span><span class="token operator">=</span>/data/logs/kubernetes/kube-proxy/proxy.stdout.log<span class="token assign-left variable">stdout_logfile_maxbytes</span><span class="token operator">=</span>64MB<span class="token assign-left variable">stdout_logfile_backups</span><span class="token operator">=</span><span class="token number">4</span><span class="token assign-left variable">stdout_capture_maxbytes</span><span class="token operator">=</span>1MB<span class="token assign-left variable">stdout_events_enabled</span><span class="token operator">=</span>falseEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="启动与检查：-2"><a href="#启动与检查：-2" class="headerlink" title="启动与检查："></a>启动与检查：</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">conf<span class="token punctuation">]</span><span class="token comment"># supervisorctl update</span>conf<span class="token punctuation">]</span><span class="token comment"># supervisorctl status</span>conf<span class="token punctuation">]</span><span class="token comment"># tail -fn20 /data/logs/kubernetes/kube-proxy/proxy.stdout.log</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014105908239.png" alt="image-20211014105908239"></p><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014105949903.png" alt="image-20211014105949903"></p><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014110016777.png" alt="image-20211014110016777"></p><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014110047627.png" alt="image-20211014110047627"></p><pre class="line-numbers language-none"><code class="language-none"># 编辑一个简单的nginx资源清单k8s-master4 nginx]# cat ds.yaml apiVersion: apps/v1kind: DaemonSetmetadata:  name: nginx-dsspec:  selector:    matchLabels:      app: nginx-ds  template:    metadata:      labels:        app: nginx-ds    spec:      containers:      - name: my-nginx        image: nginx:latest        ports:        - containerPort: 80# 引用ds.yaml资源清单k8s-master4 nginx]# kubectl apply -f ds.yaml# 查看nginx pod 状态k8s-master4 nginx]# kubectl get pods -o wide<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014121809579.png" alt="image-20211014121809579"></p><p>这时候可以看到各节点的pod创建是<code>Running</code>状态但是分配的IP相同，都是10.88.xx.xx网段。这是因为containerd自带的cni插件配置<code>/etc/cni/net.d/10-containerd-net.conflist</code>导致，我们可以来看下这个文件。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">~<span class="token punctuation">]</span># cat /etc/cni/net.d/<span class="token number">10</span>-containerd-net.conflist<span class="token punctuation">{</span>  <span class="token property">"cniVersion"</span><span class="token operator">:</span> <span class="token string">"0.4.0"</span><span class="token punctuation">,</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"containerd-net"</span><span class="token punctuation">,</span>  <span class="token property">"plugins"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"bridge"</span><span class="token punctuation">,</span>      <span class="token property">"bridge"</span><span class="token operator">:</span> <span class="token string">"cni0"</span><span class="token punctuation">,</span>      <span class="token property">"isGateway"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token property">"ipMasq"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token property">"promiscMode"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token property">"ipam"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"host-local"</span><span class="token punctuation">,</span>        <span class="token property">"ranges"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">[</span><span class="token punctuation">{</span>            <span class="token property">"subnet"</span><span class="token operator">:</span> <span class="token string">"10.88.0.0/16"</span>          <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">[</span><span class="token punctuation">{</span>            <span class="token property">"subnet"</span><span class="token operator">:</span> <span class="token string">"2001:4860:4860::/64"</span>          <span class="token punctuation">}</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"routes"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span> <span class="token property">"dst"</span><span class="token operator">:</span> <span class="token string">"0.0.0.0/0"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span> <span class="token property">"dst"</span><span class="token operator">:</span> <span class="token string">"::/0"</span> <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"portmap"</span><span class="token punctuation">,</span>      <span class="token property">"capabilities"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">"portMappings"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到 <code>/etc/cni/net.d/10-containerd-net.conflist</code> 这个文件中已经定义了 <code>subnet</code> 网段恰好就是 <code>10.88.0.0/16</code> ，网桥名称为 <code>cni0</code> , 网络类型为 <code>bridge</code> 但是使用bridge 网络的容器无法跨多个宿主机进行通信，跨主机通信需要借助其他的 cni 插件，比如我们下面要安装的 Flannel，或者Calico 等等。</p><h4 id="四、部署网络插件"><a href="#四、部署网络插件" class="headerlink" title="四、部署网络插件"></a>四、部署网络插件</h4><h5 id="1-安装Flannel插件"><a href="#1-安装Flannel插件" class="headerlink" title="1. 安装Flannel插件"></a>1. 安装Flannel插件</h5><h6 id="节点规划："><a href="#节点规划：" class="headerlink" title="节点规划："></a>节点规划：</h6><table><thead><tr><th>主机</th><th>IP</th><th>角色</th></tr></thead><tbody><tr><td>k8s-master4</td><td>192.168.92.155</td><td>flannel</td></tr><tr><td>k8s-node4-1</td><td>192.168.92.156</td><td>flannel</td></tr><tr><td>k8s-node4-2</td><td>192.168.92.157</td><td>flannel</td></tr></tbody></table><h6 id="下载软件包、解压、做软链接："><a href="#下载软件包、解压、做软链接：" class="headerlink" title="下载软件包、解压、做软链接："></a>下载软件包、解压、做软链接：</h6><p><a href="https://github.com/flannel-io/flannel/releases">flannel 下载链接</a></p><pre class="line-numbers language-none"><code class="language-none">~]# cd /opt/srcsrc]# wget https://github.com/flannel-io/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gzsrc]# mkdir /opt/flannel-v0.11.0src]# tar -xf flannel-v0.11.0-linux-amd64.tar.gz -C /opt/flannel-v0.11.0src]# ln -s /opt/flannel-v0.11.0 /opt/flannel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="拷贝证书、秘钥："><a href="#拷贝证书、秘钥：" class="headerlink" title="拷贝证书、秘钥："></a>拷贝证书、秘钥：</h6><pre class="line-numbers language-none"><code class="language-none">src]# cd /opt/flannelk8s-master4 flannel]# mkdir certsk8s-master4 flannel]# cp -p /opt/certs/ca.pem /opt/certs/client.pem /opt/certs/client-key.pem  /opt/flannel/certs/# 拷贝至其他主机节点k8s-master4 flannel]# scp -rp /opt/flannel/certs 192.168.92.156:/opt/flannel/k8s-master4 flannel]# scp -rp /opt/flannel/certs 192.168.92.157:/opt/flannel/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑配置文件：-1"><a href="#编辑配置文件：-1" class="headerlink" title="编辑配置文件："></a>编辑配置文件：</h6><pre class="line-numbers language-none"><code class="language-none">flannel]# cat &gt; subnet.env &lt;&lt; EOFFLANNEL_NETWORK=172.92.0.0/16FLANNEL_SUBNET=172.92.155.1/24FLANNEL_MTU=1500FLANNEL_IPMASQ=falseEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑启动脚本：-4"><a href="#编辑启动脚本：-4" class="headerlink" title="编辑启动脚本："></a>编辑启动脚本：</h6><pre class="line-numbers language-none"><code class="language-none">flannel]# cat flanneld.sh #!/bin/sh./flanneld \  --public-ip=192.168.92.155 \  --etcd-endpoints=https://192.168.92.155:2379,https://192.168.92.156:2379,https://192.168.92.157:2379 \  --etcd-keyfile=./certs/client-key.pem \  --etcd-certfile=./certs/client.pem \  --etcd-cafile=./certs/ca.pem \  --iface=ens32 \  --subnet-file=./subnet.env \  --healthz-port=2401EOF# 给权限flannel]# chmod +x flanneld.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="编辑supervisor管理配置：-3"><a href="#编辑supervisor管理配置：-3" class="headerlink" title="编辑supervisor管理配置："></a>编辑supervisor管理配置：</h6><pre class="line-numbers language-none"><code class="language-none">flannel]# cat &gt; /etc/supervisord.d/flannel.ini &lt;&lt; EOF[program:flanneld]command=/opt/flannel/flanneld.sh                             ; the program (relative uses PATH, can take args)numprocs=1                                                   ; number of processes copies to start (def 1)directory=/opt/flannel                                       ; directory to cwd to before exec (def no cwd)autostart=true                                               ; start at supervisord start (default: true)autorestart=true                                             ; retstart at unexpected quit (default: true)startsecs=30                                                 ; number of secs prog must stay running (def. 1)startretries=3                                               ; max # of serial start failures (default 3)exitcodes=0,2                                                ; 'expected' exit codes for process (default 0,2)stopsignal=QUIT                                              ; signal used to kill process (default TERM)stopwaitsecs=10                                              ; max num secs to wait b4 SIGKILL (default 10)user=root                                                    ; setuid to this UNIX account to run the programredirect_stderr=true                                         ; redirect proc stderr to stdout (default false)killasgroup=true                                             ; kill all process in a groupstopasgroup=true                                             ; stop all process in a groupstdout_logfile=/data/logs/flanneld/flanneld.stdout.log       ; stderr log path, NONE for none; default AUTOstdout_logfile_maxbytes=64MB                                 ; max # logfile bytes b4 rotation (default 50MB)stdout_logfile_backups=4                                     ; # of stdout logfile backups (default 10)stdout_capture_maxbytes=1MB                                  ; number of bytes in 'capturemode' (default 0)stdout_events_enabled=false                                  ; emit events on stdout writes (default false)EOF# 创建目录flannel]# mkdir -p /data/logs/flanneld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="修改CNI配置："><a href="#修改CNI配置：" class="headerlink" title="修改CNI配置："></a>修改CNI配置：</h6><p>修改后如下：</p><pre class="line-numbers language-none"><code class="language-none">flannel]# cat /etc/cni/net.d/10-containerd-net.conflist {  "cniVersion": "0.4.0",  "name": "containerd-net",  "plugins": [    {      "type": "bridge",      "bridge": "cni0",      "isGateway": true,      "ipMasq": true,      "promiscMode": true,      "ipam": {        "type": "host-local",        "ranges": [          [{            "subnet": "172.92.155.0/24"          }]        ],        "routes": [          { "dst": "0.0.0.0/0" }        ]      }    },    {      "type": "portmap",      "capabilities": {"portMappings": true}    }  ]}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注：</strong>这里的<code>subnet</code>网段尽量根据宿主机<code>IP</code>的最后两位定义，这样便于pod出错后快速定位主机。</p><h6 id="重启containerd："><a href="#重启containerd：" class="headerlink" title="重启containerd："></a>重启containerd：</h6><pre class="line-numbers language-none"><code class="language-none">flannel]# ifconfig cni0 down &amp;&amp; ip link del cni0flannel]# systemctl restart containerdflannel]# supervisorctl restart kube-kubelet<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="启动flanneld并检查："><a href="#启动flanneld并检查：" class="headerlink" title="启动flanneld并检查："></a>启动flanneld并检查：</h6><pre class="line-numbers language-none"><code class="language-none">flannel]# supervisorctl updateflannel]# supervisorctl status<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014154326846.png" alt="image-20211014154326846" style="zoom: 80%;"><pre class="line-numbers language-none"><code class="language-none">flannel]# kubectl get pod -o wide<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014154957780.png" alt="image-20211014154957780"></p><h5 id="2-向平台交付coredns插件"><a href="#2-向平台交付coredns插件" class="headerlink" title="2. 向平台交付coredns插件"></a>2. 向平台交付coredns插件</h5><h6 id="资源清单创建："><a href="#资源清单创建：" class="headerlink" title="资源清单创建："></a>资源清单创建：</h6><pre class="line-numbers language-none"><code class="language-none">k8s-master4 ~]# mkdir -p /data/yaml/corednsk8s-master4 ~]# cat &gt; /etc/nginx/conf.d/k8s-yaml.hcloud.com.conf &lt;&lt; EOFserver {    listen 80;    server_name k8s-yaml.hcloud.com;    location / {        autoindex on;        default_type text/plain;        root /data/yaml;   }}EOFk8s-master4 ~]# 重启nginxk8s-master4 ~]# nginx -s reloadk8s-master4 ~]# cd /data/yaml/coredns/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="创建rbac-yaml"><a href="#创建rbac-yaml" class="headerlink" title="创建rbac.yaml:"></a>创建rbac.yaml:</h6><pre class="line-numbers language-none"><code class="language-none">k8s-master4 ~]# cat &gt; /data/yaml/coredns/rbac.yaml &lt;&lt; EOFapiVersion: v1kind: ServiceAccountmetadata:  name: coredns  namespace: kube-system  labels:      kubernetes.io/cluster-service: "true"      addonmanager.kubernetes.io/mode: Reconcile---apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRolemetadata:  labels:    kubernetes.io/bootstrapping: rbac-defaults    addonmanager.kubernetes.io/mode: Reconcile  name: system:corednsrules:- apiGroups:  - ""  resources:  - endpoints  - services  - pods  - namespaces  verbs:  - list  - watch---apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata:  annotations:    rbac.authorization.kubernetes.io/autoupdate: "true"  labels:    kubernetes.io/bootstrapping: rbac-defaults    addonmanager.kubernetes.io/mode: EnsureExists  name: system:corednsroleRef:  apiGroup: rbac.authorization.k8s.io  kind: ClusterRole  name: system:corednssubjects:- kind: ServiceAccount  name: coredns  namespace: kube-systemEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="创建cm-yaml"><a href="#创建cm-yaml" class="headerlink" title="创建cm.yaml:"></a>创建cm.yaml:</h6><pre class="line-numbers language-none"><code class="language-none">k8s-master4 ~]# cat &gt; /data/yaml/coredns/cm.yaml &lt;&lt; EOFapiVersion: v1kind: ConfigMapmetadata:  name: coredns  namespace: kube-systemdata:  Corefile: |    .:53 {        errors        log        health        ready        kubernetes cluster.local 10.96.0.0/22        forward . 192.168.92.2        cache 30        loop        reload        loadbalance       }EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="创建dp-yaml："><a href="#创建dp-yaml：" class="headerlink" title="创建dp.yaml："></a>创建dp.yaml：</h6><pre class="line-numbers language-none"><code class="language-none">k8s-master4 ~]# cat &gt; /data/yaml/coredns/dp.yaml &lt;&lt; EOFapiVersion: apps/v1kind: Deploymentmetadata:  name: coredns  namespace: kube-system  labels:    k8s-app: coredns    kubernetes.io/name: "CoreDNS"spec:  replicas: 1  selector:    matchLabels:      k8s-app: coredns  template:    metadata:      labels:        k8s-app: coredns    spec:      priorityClassName: system-cluster-critical      serviceAccountName: coredns      containers:      - name: coredns        image: docker.io/coredns/coredns:1.6.1        args:        - -conf        - /etc/coredns/Corefile        volumeMounts:        - name: config-volume          mountPath: /etc/coredns        ports:        - containerPort: 53          name: dns          protocol: UDP        - containerPort: 53          name: dns-tcp          protocol: TCP        - containerPort: 9153          name: metrics          protocol: TCP        livenessProbe:          httpGet:            path: /health            port: 8080            scheme: HTTP          initialDelaySeconds: 60          timeoutSeconds: 5          successThreshold: 1          failureThreshold: 5      dnsPolicy: Default      volumes:        - name: config-volume          configMap:            name: coredns            items:            - key: Corefile              path: CorefileEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="创建svc-yaml："><a href="#创建svc-yaml：" class="headerlink" title="创建svc.yaml："></a>创建svc.yaml：</h6><pre class="line-numbers language-none"><code class="language-none">k8s-master4 ~]# cat &gt; /data/yaml/coredns/svc.yaml &lt;&lt; EOFapiVersion: v1kind: Servicemetadata:  name: coredns  namespace: kube-system  labels:    k8s-app: coredns    kubernetes.io/cluster-service: "true"    kubernetes.io/name: "CoreDNS"spec:  selector:    k8s-app: coredns  clusterIP: 10.96.0.2  ports:  - name: dns    port: 53    protocol: UDP  - name: dns-tcp    port: 53  - name: metrics    port: 9153    protocol: TCPEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="交付插件："><a href="#交付插件：" class="headerlink" title="交付插件："></a>交付插件：</h6><pre class="line-numbers language-none"><code class="language-none">k8s-master4 ~]# kubectl apply -f /data/yaml/coredns/rbac.yamlk8s-master4 ~]# kubectl apply -f /data/yaml/coredns/cm.yamlk8s-master4 ~]# kubectl apply -f /data/yaml/coredns/dp.yamlk8s-master4 ~]# kubectl apply -f /data/yaml/coredns/svc.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h6 id="测试检查："><a href="#测试检查：" class="headerlink" title="测试检查："></a>测试检查：</h6><pre class="line-numbers language-none"><code class="language-none">k8s-master4 ~]# kubectl get pods -n kube-system<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211015144950126.png" alt="image-20211015144950126"></p><p>解析检查如下图：</p><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211015145614866.png" alt="image-20211015145614866"></p><p>现在k8s集群已经部署完成，但是为了更方便的使用后面会交付<code>traefik</code>、<code>dashboard</code>、<code>prometheus</code>、<code>efk</code> 等服务。下面是是针对整个集群的环境检查。</p><h4 id="五、集群整体环境检查"><a href="#五、集群整体环境检查" class="headerlink" title="五、集群整体环境检查"></a>五、集群整体环境检查</h4><pre class="line-numbers language-none"><code class="language-none"># 查看个进程状态# supervisorctl status<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014175206117.png" alt="image-20211014175206117"></p><pre class="line-numbers language-none"><code class="language-none"># 查看网络状态# ip addr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014180315098.png" alt="image-20211014180315098"></p><pre class="line-numbers language-none"><code class="language-none"># 查看路由规则# route -n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014180206102.png" alt="image-20211014180206102"></p><pre class="line-numbers language-none"><code class="language-none"># 查看集群节点与组件状态# kubectl get cs# kubectl get nodes -o wide# kubectl get pods -o wide<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014180722612.png" alt="image-20211014180722612"></p><pre class="line-numbers language-none"><code class="language-none"># 查看pod信息状态# kubectl get pods -o wide<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014181210572.png" alt="image-20211014181210572"></p><h5 id="测试pod之间网络互通"><a href="#测试pod之间网络互通" class="headerlink" title="测试pod之间网络互通"></a>测试pod之间网络互通</h5><pre class="line-numbers language-none"><code class="language-none"># 启动一个用来测试的pod# kubectl run my-test --image=busybox -- tail -f /dev/null# kubectl get pods -o wide<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014182031681.png" alt="image-20211014182031681"></p><p>这里我们可以看到新pod在<code>k8s-node4-2</code>节点上，接下来进入用来测试的<code>pod</code>去<code>ping</code>其他3个节点上的pod。</p><pre class="line-numbers language-none"><code class="language-none"># kubectl exec -it my-test-f84cbcd45-rcvcg -- sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://aptxhb.oss-cn-shenzhen.aliyuncs.com/images/image-20211014182727696.png" alt="image-20211014182727696"></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
